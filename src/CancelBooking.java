

import java.sql.*;
import java.util.*;

import javax.swing.JOptionPane;
import java.text.SimpleDateFormat;


/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

/**
 *
 * @author Garvit
 */
public class CancelBooking extends javax.swing.JFrame {
    String hotelName;
    String roomType;
    String name;
    String username;
    String location;
    String bookref;
    int numOfRooms;
    int numOfGuests;
    int price;
    
   // Date checkIn;
  //  Date checkOut;
    java.sql.Date sqlCheckIn;
    java.sql.Date sqlCheckOut;
    int ocf;
    int idf;
     java.util.Date checkOut;
            java.util.Date checkIn;

    /**
     * Creates new form CancelBooking
     */
    
     CancelBooking(String ref,String a,String b,int n, String h,String r, String naam, String usernaam,String l) {
        bookref = ref;
         hotelName=h;
     roomType=r;
     name=naam;
     username=usernaam;
     
     location=l;
     
        numOfRooms=n;
        try{
        checkOut =new SimpleDateFormat("yyyy-MM-dd").parse(a);;
        checkIn= new SimpleDateFormat("yyyy-MM-dd").parse(b);;}
        catch(Exception e){}
        this.setLocationRelativeTo(null);
        initComponents();
    }
    public CancelBooking() {
        this.setLocationRelativeTo(null);
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        jLabel10 = new javax.swing.JLabel();
        jLabel11 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel12 = new javax.swing.JLabel();
        jButton2 = new javax.swing.JButton();
        jButton3 = new javax.swing.JButton();
        jButton1 = new javax.swing.JButton();
        jPanel2 = new javax.swing.JPanel();

        jLabel4.setFont(new java.awt.Font("Tahoma", 1, 22)); // NOI18N
        jLabel4.setText("Hotel Name");

        jLabel5.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jLabel5.setText("Room Type");

        jLabel6.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jLabel6.setText("Number of Rooms");

        jLabel7.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jLabel7.setText("Number of Guests");

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setUndecorated(true);
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jPanel1.setBackground(new java.awt.Color(0, 0, 0));

        jLabel1.setFont(new java.awt.Font("Tahoma", 0, 36)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(255, 255, 255));
        jLabel1.setText("Cancel Your Booking");

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 413, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(325, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );

        getContentPane().add(jPanel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 750, 80));

        jLabel8.setFont(new java.awt.Font("Tahoma", 1, 24)); // NOI18N
        jLabel8.setForeground(new java.awt.Color(255, 255, 255));
        jLabel8.setText("Hotel Name");
        getContentPane().add(jLabel8, new org.netbeans.lib.awtextra.AbsoluteConstraints(31, 88, -1, -1));

        jLabel9.setFont(new java.awt.Font("Tahoma", 0, 24)); // NOI18N
        jLabel9.setForeground(new java.awt.Color(255, 255, 255));
        jLabel9.setText("Room Type");
        getContentPane().add(jLabel9, new org.netbeans.lib.awtextra.AbsoluteConstraints(111, 168, -1, -1));

        jLabel10.setFont(new java.awt.Font("Tahoma", 0, 24)); // NOI18N
        jLabel10.setForeground(new java.awt.Color(255, 255, 255));
        jLabel10.setText("Number of Rooms");
        getContentPane().add(jLabel10, new org.netbeans.lib.awtextra.AbsoluteConstraints(111, 218, -1, -1));

        jLabel11.setFont(new java.awt.Font("Tahoma", 0, 24)); // NOI18N
        jLabel11.setForeground(new java.awt.Color(255, 255, 255));
        jLabel11.setText("Number of Guests");
        getContentPane().add(jLabel11, new org.netbeans.lib.awtextra.AbsoluteConstraints(111, 268, -1, -1));

        jLabel2.setFont(new java.awt.Font("Tahoma", 0, 24)); // NOI18N
        jLabel2.setForeground(new java.awt.Color(255, 255, 255));
        jLabel2.setText("Check-in Date");
        getContentPane().add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(411, 168, -1, -1));

        jLabel3.setFont(new java.awt.Font("Tahoma", 0, 24)); // NOI18N
        jLabel3.setForeground(new java.awt.Color(255, 255, 255));
        jLabel3.setText("Check-out Date");
        getContentPane().add(jLabel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(411, 218, -1, -1));

        jLabel12.setFont(new java.awt.Font("Tahoma", 0, 24)); // NOI18N
        jLabel12.setForeground(new java.awt.Color(255, 255, 255));
        jLabel12.setText("Cancellation Charges: ");
        java.util.Date currentDate = new java.util.Date();

        String url="jdbc:mysql://localhost:3306/sys";
        String mysqluname="root";
        String mysqlpass="mysql";
        String query ="select * from bookinglist";
        try{
            Class.forName("com.mysql.jdbc.Driver");
            Connection c2 = DriverManager.getConnection(url,mysqluname,mysqlpass);
            Statement s2=c2.createStatement();
            ResultSet rs2 = s2.executeQuery(query);

            while(rs2.next())
            {
                String ref = rs2.getString(2);
                if(bookref.equals(ref))
                {
                    hotelName =rs2.getString(4);
                    roomType = rs2.getString(5);
                    checkIn = rs2.getDate(6);
                    checkOut = rs2.getDate(7);
                    price = rs2.getInt(12);
                    numOfRooms = rs2.getInt(9);
                    numOfGuests = rs2.getInt(8);
                }
            }
        }

        catch(Exception e){}

        double diff = checkIn.getTime() - currentDate.getTime();
        diff = diff / 1000 / 60 / 60 / 24;

        if(diff <=3)
        jLabel12.setText("Cancelation Charges: Rs. "+ price/2 + "/-" );
        else
        jLabel12.setText("Cancelation Charges: Rs. 0/-" );

        jLabel8.setText("Hotel Name: "+ hotelName);
        jLabel9.setText("Room: "+ roomType);
        jLabel10.setText("Number of Rooms: "+ numOfRooms);
        jLabel11.setText("Number of Guests: "+ numOfGuests);
        jLabel2.setText("Check-In: "+ checkIn);
        jLabel3.setText("Check-Out: "+ checkOut);
        getContentPane().add(jLabel12, new org.netbeans.lib.awtextra.AbsoluteConstraints(31, 348, -1, -1));

        jButton2.setBackground(new java.awt.Color(255, 153, 0));
        jButton2.setFont(new java.awt.Font("Tahoma", 0, 24)); // NOI18N
        jButton2.setText("Back");
        jButton2.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jButton2MouseClicked(evt);
            }
        });
        getContentPane().add(jButton2, new org.netbeans.lib.awtextra.AbsoluteConstraints(221, 431, -1, -1));

        jButton3.setBackground(new java.awt.Color(0, 255, 0));
        jButton3.setFont(new java.awt.Font("Tahoma", 0, 24)); // NOI18N
        jButton3.setText("Confirm");
        jButton3.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jButton3MouseClicked(evt);
            }
        });
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });
        getContentPane().add(jButton3, new org.netbeans.lib.awtextra.AbsoluteConstraints(365, 431, -1, -1));

        jButton1.setBackground(new java.awt.Color(255, 0, 0));
        jButton1.setFont(new java.awt.Font("Tahoma", 0, 24)); // NOI18N
        jButton1.setText("Sign Out");
        jButton1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jButton1MouseClicked(evt);
            }
        });
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });
        getContentPane().add(jButton1, new org.netbeans.lib.awtextra.AbsoluteConstraints(526, 431, 130, -1));

        jPanel2.setBackground(new java.awt.Color(0, 0, 255));

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 750, Short.MAX_VALUE)
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 400, Short.MAX_VALUE)
        );

        getContentPane().add(jPanel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 80, 750, 400));

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jButton1ActionPerformed

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jButton3ActionPerformed

    
     public static java.util.Date addDays(java.util.Date date, int days) {
		GregorianCalendar cal = new GregorianCalendar();
		cal.setTime(date);
		cal.add(Calendar.DATE, days);
				
		return cal.getTime();
	}
    
     boolean checkIfInDatabase(int roomid, java.util.Date d)
    {
         String url="jdbc:mysql://localhost:3306/sys";
        String mysqluname="root";
        String mysqlpass="mysql";
            boolean f =false;
            String query="select * from r"+roomid;
            try{
            Class.forName("com.mysql.jdbc.Driver");
            Connection c = DriverManager.getConnection(url,mysqluname,mysqlpass);
            Statement s=c.createStatement();
            ResultSet rs = s.executeQuery(query);
            //System.out.println("Details submitted successfully");
            java.util.Date d1=new java.sql.Date (d.getTime());
            while (rs.next())
            {
                
                if(!d1.toString().equals(((rs.getString(1)))))
                {//System.out.println("Successful login");
                   System.out.println(d1+"          "+rs.getDate(1));
                continue;}
                else
                {
                    f=true;
                    break;
                }
            }
            s.close();
            c.close();
            //this.dispose();
            
            
            
    }
            catch(Exception e){}
            return f;
    }
     
    boolean availability(int id,java.util.Date newCI,java.util.Date newCO,int newNOR)
    {
     
         int flag=0;
        try{
      
        }
        catch(Exception e){}
        
        String url="jdbc:mysql://localhost:3306/sys";
        String mysqluname="root";
        String mysqlpass="mysql";
        java.sql.Date sqlTemp;
            //boolean f =false;
            String query="select * from r"+id;
            try{
      
            java.util.Date bdate;
            java.util.Date temp=newCI;
            int flg=3;String n;
            
    
            
            while(temp.before(newCO))
            {
                
              
            //boolean f =false;
            String query1="select * from r"+id;
            Class.forName("com.mysql.jdbc.Driver");
            Connection c1 = DriverManager.getConnection(url,mysqluname,mysqlpass);
            Statement s1=c1.createStatement();
            ResultSet rs1 = s1.executeQuery(query1);
            
           
             sqlTemp= new java.sql.Date(temp.getTime());
            //ArrayList<String> hotels= new ArrayList<String>();
            while (rs1.next())
            {
                bdate=rs1.getDate(1);
               // bCheckOut=rs.getDate(2);
                n=rs1.getString(2);
             //   System.out.println(n + "  ");
                if(!n.equals(""))
                {    
                    int n1=Integer.parseInt(n);
                    
                if((sqlTemp.toString().equals(bdate.toString())&&(newNOR>n1)))
                { 
                    flg=1;
                    break;
                   
                }
                else if ((sqlTemp.toString().equals(bdate.toString())&&(newNOR<=n1)))
                {
                    flg =2;
                    break;
                }
                else flg=3;
                
                }
          
            }
            if(flg==1)
                {
                    flag=1;
                    break;
                    
                }
              else
            {
                    temp=addDays(temp,1);
            } 
                    s1.close();
                    c1.close();
                
 }

    }
            catch(Exception e){}//System.out.println(e);
            
            
        
        if(flag==1)
            return false;
        return true;
        }
    
    
    private void jButton3MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jButton3MouseClicked
        // TODO add your handling code here:
        int dialogButton = JOptionPane.YES_NO_OPTION;
        int dialogResult = JOptionPane.showConfirmDialog (null, "Would You Like to Cancel this booking?","Warning",dialogButton);
        if(dialogButton == JOptionPane.YES_OPTION)
        {
            String url="jdbc:mysql://localhost:3306/sys";
            String mysqluname="root";
            String mysqlpass="mysql";
            
            
        
        String query;
        
        try
            {
            Class.forName("com.mysql.jdbc.Driver");
            Connection c = DriverManager.getConnection(url,mysqluname,mysqlpass);
            Statement s=c.createStatement();
            query="select * from "+location;
            ResultSet rs = s.executeQuery(query);
            System.out.println(query+"lol");
       //     System.out.println(hotelname+"      "+roomtype);
           // int i=0;
            while (rs.next())
            {
               // System.out.println("while"+(i++));
                if(hotelName.equals(rs.getString(1))&&roomType.equals(rs.getString(2)))
                {
                    idf=Integer.parseInt(rs.getString(9));
                    ocf=rs.getInt(10);
                    break;
                
            }
              //  System.out.println(idf+"PPPPPPPPPPPPPlooloollPP");
           
          }
            s.close();
            c.close();
            }
    
            catch(Exception e){}
      System.out.println(idf+"idf");
         try{
        
        java.util.Date temp=checkIn;
        //System.out.println("LOL1  "+temp);
        java.sql.Date sqlTemp=new java.sql.Date (temp.getTime());
        String queryX="select * from r"+idf+" ;";
       Connection cx = DriverManager.getConnection(url,mysqluname,mysqlpass);
           Statement sx=cx.createStatement();
           
           
           Connection c1x = DriverManager.getConnection(url,mysqluname,mysqlpass);
           Statement s1x=c1x.createStatement();
        System.out.println("LOL");
            while(temp.before(checkOut)||temp.equals(checkOut))
            {
                sqlTemp=new java.sql.Date (temp.getTime());
                String query2;
              ResultSet rsx = sx.executeQuery(queryX);
              while(rsx.next())
              {
                  if(rsx.getDate(1).equals(temp))
                      break;
              }
                    int a=rsx.getInt(2);
                    System.out.println(sqlTemp+"   "+rsx.getString(1)+"   "+a+"  "+numOfRooms);
                    //if(temp.before(checkOut)&&temp.after(checkIn))
                    query2="UPDATE r"+idf+" SET noOfRoomsAvail = "+(a+numOfRooms)+" WHERE dates = '"+sqlTemp+"';" ;
           int cnt = s1x.executeUpdate(query2);
           temp=addDays(temp,1);
           sqlTemp=new java.sql.Date (temp.getTime());
            
            }
            
            
               sx.close();
           cx.close();
           
            
            s1x.close();
           c1x.close();
           
           JOptionPane.showMessageDialog(null, "Cancellation Successful!!!");
           
        }
        catch(Exception e){System.out.println(e);}   
        
         query="DELETE from bookinglist WHERE refid = \""+bookref+"\";";
        try
            {
        Class.forName("com.mysql.jdbc.Driver");
        Connection c = DriverManager.getConnection(url,mysqluname,mysqlpass);
        Statement s=c.createStatement();
        int cnt=s.executeUpdate(query);
        s.close();
        c.close();
            }
        catch(Exception e){System.out.println(e);}
         
            boolean f =false;
            query="select * from wlist";
            try{
            Class.forName("com.mysql.jdbc.Driver");
            Connection c = DriverManager.getConnection(url,mysqluname,mysqlpass);
            Statement s=c.createStatement();
            ResultSet rs = s.executeQuery(query);
            //System.out.println("Details submitted successfully");
            String deleteref="-1";
            while (rs.next())
            {
                if(availability(rs.getInt(3),(java.util.Date)rs.getDate(6),(java.util.Date)rs.getDate(7),rs.getInt(4)))
                {
                  String    query3="insert into bookinglist values (\""+rs.getString(1)+"\" , \""+rs.getString(11)+"\" , \""+rs.getString(2)+"\" , \""+hotelName+"\" , \""+roomType+"\" , '"+rs.getDate(6)+"' , '"+rs.getDate(7)+"' , "+rs.getString(5)+" , "+rs.getString(4)+" , \""+rs.getString(9)+"\" , \""+rs.getString(10)+"\" , "+rs.getInt(12)+" , "+rs.getString(3)+" );";
          // System.out.println(query3);
          deleteref=rs.getString(11);
          System.out.println(query3);
            try{
            Class.forName("com.mysql.jdbc.Driver");
             Connection c3 = DriverManager.getConnection(url,mysqluname,mysqlpass);
            Statement s3=c3.createStatement();
            int cnt1= s3.executeUpdate(query3);
            s3.close();c3.close();
            }
            catch(Exception e){}
            
            java.util.Date CheckIn=(java.util.Date)rs.getDate(6);
            java.util.Date CheckOut=(java.util.Date)rs.getDate(7);
            idf=rs.getInt(3);
            numOfRooms=rs.getInt(4);
            
            
            
            
            
            
              
            String create="CREATE TABLE IF NOT EXISTS r"+idf+"( dates DATE , noOfRoomsAvail int);";
            try{
            Connection c2 = DriverManager.getConnection(url,mysqluname,mysqlpass);
            Statement s2=c2.createStatement();
            s2.execute(create);
            s2.close();
           
            c2.close();
            }
            catch(Exception e){}
       
        try{
        
        java.util.Date temp=CheckIn;
        //System.out.println("LOL1  "+temp);
        java.sql.Date sqlTemp=new java.sql.Date (temp.getTime());
         query="select * from r"+idf+" ;";
       Connection c1l = DriverManager.getConnection(url,mysqluname,mysqlpass);
           Statement s1l=c1l.createStatement();
           ResultSet rsl = s1l.executeQuery(query);
           
           Connection c1 = DriverManager.getConnection(url,mysqluname,mysqlpass);
           Statement s1=c1.createStatement();
      
            while(temp.before(CheckOut)||temp.equals(CheckOut))
            {
                sqlTemp=new java.sql.Date (temp.getTime());
                String query2;
                if(!checkIfInDatabase(idf,temp))
                {
                 query2="insert into r"+idf+" values ('"+sqlTemp+"',"+(ocf-numOfRooms)+");";}
                else
                {
                    rsl.next();int a=rsl.getInt(2);
                    query2="UPDATE r"+idf+" SET noOfRoomsAvail = "+(a-numOfRooms)+" WHERE dates = '"+sqlTemp+"';" ;
                }
                
           int cnt = s1.executeUpdate(query2);
           temp=addDays(temp,1);
            
            }s1.close();
           c1.close();
           
           s1l.close();String delete="delete from wlist where bookref = \""+deleteref+"\";";
           c1l.close();if(!deleteref.equals("-1"))
                s.executeUpdate(delete);
            System.out.println(delete);
            }
        catch(Exception e){System.out.println(e);}
            
            
            
            break;
                }
            }
            
            try{
            
            }
            catch(Exception e){}
            s.close();
            c.close();
            //this.dispose();
            
            
    }
            catch(Exception e){}
        
        
        
        
          YourBookings l = new YourBookings(username,name);
        l.setVisible(true);
        l.pack();
        l.setLocationRelativeTo(null);
        //rgf.setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);
       this.dispose();
         
        }
        
        
        
        
    }//GEN-LAST:event_jButton3MouseClicked

    private void jButton2MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jButton2MouseClicked
        // TODO add your handling code here:
        YourBookings l = new YourBookings(username,name);
        l.setVisible(true);
        l.pack();
        l.setLocationRelativeTo(null);
        //rgf.setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);
       this.dispose();
    }//GEN-LAST:event_jButton2MouseClicked

    private void jButton1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jButton1MouseClicked
        // TODO add your handling code here:
         Login l = new Login();
        l.setVisible(true);
        l.pack();
        l.setLocationRelativeTo(null);
        //rgf.setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);
       this.dispose();
    }//GEN-LAST:event_jButton1MouseClicked

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(CancelBooking.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(CancelBooking.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(CancelBooking.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(CancelBooking.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new CancelBooking().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    // End of variables declaration//GEN-END:variables
}
